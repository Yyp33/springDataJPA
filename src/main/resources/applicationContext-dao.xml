<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.2.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
         http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
         http://www.springframework.org/schema/mvc 
         http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
         http://www.springframework.org/schema/data/jpa  
         http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
   
   <!-- 扫描注解 -->
    <context:component-scan base-package="com.yyp.*">  </context:component-scan>
   
   <!-- 读取配置文件 -->
   <context:property-placeholder location="classpath:db.properties"/>
   
   <!-- 创建数据库连接池 -->
   <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
   		<!--druid的基础属性-->  
        <property name="url" value="${jdbc.url}"/>  
        <property name="username" value="${jdbc.username}"/>  
        <property name="password" value="${jdbc.password}"/>  
        <property name="driverClassName" value="${jdbc.driverClass}"/> 
   </bean>
   
   <!-- JPA实体管理工厂的配置 -->  
    <bean id="entityManagerFactory"  
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />  
        <property name="packagesToScan" value="com.yyp.model" /><!--待扫描的实体类包，不再需要persistence.xml了 -->  
        <property name="jpaProperties">  
            <props>  
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>  
                <prop key="hibernate.show_sql">true</prop>  
                <prop key="hibernate.hbm2ddl.auto">update</prop>  
            </props>  
        </property>  
    </bean>  
   <!--指定实现JPA的适配器 -->  
    <bean id="hibernateJpaVendorAdapter"  
          class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">  
        <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />  
    </bean>  
    <!-- Jpa 事务配置 -->  
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">  
        <property name="entityManagerFactory" ref="entityManagerFactory" />  
    </bean>  
   
   <!-- Spring Data Jpa 配置 Spring -->  
    <!-- 初始化容器时将会扫描 base-package 指定的包目录及其子目录，为继承 Repository 或其子接口的接口创建代理对象，并将代理对象注册为  
        Spring Bean -->  
    <!-- base-package 扫描的包 -->  
    <!-- repository-impl-postfix 仓库自定义实现类的后缀。自动扫描该名称带有该后缀的类，并添加到接口的实现 -->  
    <!-- factory-class 仓库接口的实现工厂 -->  
    <jpa:repositories base-package="com.yyp.dao"  
                      entity-manager-factory-ref="entityManagerFactory"  
                      transaction-manager-ref="transactionManager">  
    </jpa:repositories>  
   
   
</beans>